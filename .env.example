# Required (configure at least one provider)
# Slack
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_CHANNEL_IDS=C01234567,C0ABCDEF0

# Telegram
TELEGRAM_BOT_TOKEN=123456789:AbCdEfGhIjKlMnOpQrStUvWxYz
TELEGRAM_CHAT_IDS=123456789,-987654321

# Discord Bot (traditional method)
DISCORD_BOT_TOKEN=your-discord-bot-token
DISCORD_CHANNEL_IDS=123456789012345678,987654321098765432

# Discord Webhooks (recommended for simple notifications, uses HTTP only)
# You can use webhooks alone, or combine with bot for different channels
DISCORD_WEBHOOK_URLS=https://discord.com/api/webhooks/123456789/your-webhook-token

# Optional overrides
NOTIFY_SUBJECT_PREFIX=Docker event
DOCKER_CLI_PATH=docker
DOCKER_EVENT_FILTERS=
DOCKER_EVENT_TYPES=container,image,volume

# Message customization
# Custom message template using Go template syntax
# Available placeholders:
#   {{.Type}} - Event type (container, image, volume, etc.)
#   {{.Action}} - Event action (start, stop, create, etc.)
#   {{.ID}} - Full object ID
#   {{.ShortID}} - Short ID (first 12 chars)
#   {{.Name}} - Container/object name (if available)
#   {{.Status}} - Event status
#   {{.From}} - From field (image name for containers)
#   {{.Time}} - Event timestamp (RFC3339 format)
#   {{.Scope}} - Event scope (local or swarm)
#   {{.Actor.ID}} - Actor ID
#   {{.Attribute "key"}} - Get specific attribute by key
#   {{.GetLogs}} - Container logs (only if MESSAGE_LOG_LINES > 0)
#
# Example templates:
# Simple: Container {{.Name}} ({{.ShortID}}) {{.Action}} at {{.Time}}
# With logs: Container {{.Name}} started\nLogs:\n{{.GetLogs}}
# MESSAGE_TEMPLATE=Container {{.Name}} ({{.ShortID}}) {{.Action}} at {{.Time}}

# Number of log lines to fetch for container events (0 = disabled)
# MESSAGE_LOG_LINES=10
